{"version":3,"sources":["Components/cards/card.component.jsx","logo.svg","Components/card-lists/card-list.component.jsx","Components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","monster","id","src","name","email","CardList","monsters","map","SearchBox","placeholder","changeEventHandle","type","onChange","App","hadleChange","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qUAIaA,GCJE,I,kBDIK,SAACC,GACjB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,kBAAaF,EAAMG,QAAQC,IAAMC,IAAG,+BAA0BL,EAAMG,QAAQC,GAAxC,eAC5C,6BAAKJ,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,aEJjBC,EAAW,SAACR,GACrB,OACI,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAI,SAAAP,GAAO,OACvB,cAAC,EAAD,CAAMA,QAAWA,UCLpBQ,G,MAAY,SAAC,GAAsC,IAArCC,EAAoC,EAApCA,YAAaC,EAAuB,EAAvBA,kBACpC,OACI,uBAAOZ,UAAU,SACfa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCwCLG,E,kDAzCb,aAAc,IAAD,8BACX,gBASFC,YAAc,SAACC,GACb,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SARrC,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IALJ,E,gEAeO,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OACP,EAAKT,SAAS,CAACV,SAAUmB,S,+BAItB,IAAD,EAC0BC,KAAKN,MAA9Bd,EADD,EACCA,SAAUW,EADX,EACWA,YACXU,EAAmBrB,EAASsB,QAAO,SAAA5B,GAAO,OAC9CA,EAAQG,KAAK0B,cAAcC,SAASb,EAAYY,kBAElD,OACE,sBAAK/B,UAAU,MAAf,UACE,oBAAIA,UAAU,gBAAd,8BACA,cAAC,EAAD,CACEW,YAAc,qBACdC,kBAAsBgB,KAAKZ,cAE7B,cAAC,EAAD,CAAUR,SAAYqB,W,GApCZI,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f99ff426.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.style.css';\r\n\r\nexport const Card = (props) => {\r\n    return(\r\n        <div className=\"card-container\">\r\n            <img alt={`monster ${props.monster.id}`} src={`https://robohash.org/${props.monster.id}?set=set2`} />\r\n            <h1>{props.monster.name}</h1>\r\n            <p>{props.monster.email}</p>\r\n        </div>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\n\r\nimport './card-list.style.css';\r\nimport {Card} from '../cards/card.component';\r\n\r\nexport const CardList = (props) => {\r\n    return(\r\n        <div className=\"card-list\">\r\n            {props.monsters.map(monster => \r\n                <Card monster = {monster} />   \r\n            )}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport './search-box.style.css';\r\n\r\nexport const SearchBox = ({placeholder, changeEventHandle}) => {\r\n    return(\r\n        <input className=\"search\"\r\n          type=\"search\"\r\n          placeholder={placeholder}\r\n          onChange={changeEventHandle}\r\n        />\r\n    )\r\n}","import {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {CardList} from './Components/card-lists/card-list.component';\nimport {SearchBox} from './Components/search-box/search-box.component';\n\nclass App extends Component{\n  constructor(){\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: \"\"\n    }\n  }\n\n  // own class methods\n  hadleChange = (e) => {\n    this.setState({searchField: e.target.value})\n  }\n\n  // life cycle methods\n  componentDidMount(){\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then(response => response.json())\n    .then(users => \n        this.setState({monsters: users})\n      );\n  }\n\n  render(){\n    const {monsters, searchField} = this.state;\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return(\n      <div className=\"App\">\n        <h1 className=\"title-heading\">Monsters Rolodex</h1>\n        <SearchBox \n          placeholder = \"Search Monsters...\"\n          changeEventHandle = { this.hadleChange }\n        />\n        <CardList monsters = {filteredMonsters}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}